##rats
def food(r,unit,n,arr):
    t=r*unit
    s=0
    if arr==[]:
        return -1
    for i in range(len(arr)):
        s=s+arr[i]
        if s>=t:
            return i+1
    if s<t:
        return 0
    
print(food(7,2,8,[2,8,3,5,7,4,1,2]))

##binary
def binary(str):
    if str=="":
        return -1
    else:
        res=int(str[0])
        for i in range(2,len(str),2):
            op=str[i-1]
            var=int(str[i])
            if op=='A':
                res=res & var
            elif op=='B':
                res=res | var
            else:
                res=res ^ var
    return res
print(binary("1C0C1C1A0B1"))
print(binary("0C1A1B1C1C1B0A0"))

##password checker
def password(s):
    if len(s)<4:
        return False
    elif s[0]>='0' and s[0]<='9' or " " in s or "/" in s:
        return False
    else:
        cp=0
        d=0
        for i in range(len(s)):
            if s[i]>='A' and s[i]<='Z':
                cp+=1
            if s[i]>='0' and s[i]<='9':
                d+=1
            if cp>0 and d>0:
                return True
        
        
    return False
print(password("aA1_67BC65S"))
print(password("a987 abC012"))
print(password("Ruksar@1"))

##findcount
def findcount(n,diff,arr):
    if arr==[]:
        return -1
    else:
        c=0
        for i in range(len(arr)):
            if abs(arr[i]-n)<=diff:
                c+=1
    return c
print(findcount(13,2,[12,3,14,56,77,13,15,11,16]))

output
5

##diff between sum of numbers div by n and not div by n 
def div(n,m):
    s1=0
    s2=0
    for i in range(1,m+1):
        if i%n==0:
            s1=s1+i
        else:
            s2=s2+i
    return abs(s2-s1)
print(div(4,20))
print(div(3,10))

output
90
19

##second largest from even and second smallest from odd array sum
def LargeSmallSum(arr):
    even=[]
    odd=[]
    if len(arr)<=3:
        return 0
    else:
        for i in range(len(arr)):
            if i%2==0:
                even.append(arr[i])
            else:
                odd.append(arr[i])
    even=sorted(even)
    odd=sorted(odd)
    return even[-2]+odd[1]
print(LargeSmallSum([3,2,1,7,5,4]))   --  7
print(LargeSmallSum([5,6,2,3,4,1,8,2]))   -- 7

##find 2 min values if sum of 2 min vales<=sum then find product of the 2 min values
def a(s,n,arr):
    if n<2:
        return -1
    else:
        arr=sorted(arr)
        if arr[0]+arr[1]<=s:
            return arr[0]*arr[1]
    return 0
print(a(9,7,[5,2,4,3,9,7,1]))
print(a(4,6,[9,8,3,-7,3,9]))

output
2
-21

##move hypens to front

def hypens(s):
    if s=="":
        return -1
    else:
        if '-' in s:
            h=s.count('-')
            s1=s.split("-")
            s2='-'*h+"".join(s1)
            return s2
        else:
            return s
        
print(hypens("Move-Hyphens-to-Front"))
print(hypens("String-Compare"))
print(hypens(""))
print(hypens("hello"))

output
---MoveHyphenstoFront
-StringCompare
-1
hello

#reverse a number
n=12345
n1=12345
f=0
while n>0:
    r=n%10
    f=f*10+r
    n=n//10
print(f)
or 
s=str(n1)
s1=int(s[::-1])
print(s1)

output
54321
54321

Autobiographical number
def autobio(s):
    c=0
    for i in range(len(s)):
        if int(s[i])==s.count(str(i)):
            
            c+=1
            
        else:
            return False
    if c==len(s):
        print("unique values for",s," : ",c-s.count('0'))
        return True
print(autobio("1210"))
print(autobio("2020"))
print(autobio("3211000"))
print(autobio("1234")) 

output
unique values for 1210  :  3
True
unique values for 2020  :  2
True
unique values for 3211000  :  4
True
False

##max value and its index
def m(arr):
    a=arr[0]
    k=0
    for i in range(1,len(arr)):
        if a<arr[i]:
            a=arr[i]
            k=i
    print("max value : ",a)
    print("index : ",k)
m([11,100,23,45,82,27,66,12,78,13,71,86 ])

output
max value :  100
index :  1


def m(arr):
    return [max(arr),arr.index(max(arr))]
print(m([11,100,23,45,82,27,66,12,78,13,71,86 ]))

output
[100,1]

##distance between the sides o a trainagle sum
import math
def sqrtsum(x1,y1,x2,y2,x3,y3):
    a=math.sqrt((x1-x2)**2 + (y1-y2)**2)
    b=math.sqrt((x3-x2)**2 + (y3-y2)**2)
    c=math.sqrt((x1-x3)**2 + (y1-y3)**2)
    
    return round(a,2)+round(b,2)+round(c,2)
print(sqrtsum(1,1,2,4,3,6))

output
10.79

##polindrome range 
def polindrome(n,m):
    l=[]
    for i in range(n+1,m):
        if i<10:
            l.append(i)
        else:
            s=str(i)
            s1=s[::-1]
            if s==s1:
                l.append(i)
     
        
    return l
print(polindrome(10,80))
print(polindrome(1,300))

output
[11, 22, 33, 44, 55, 66, 77]
[2, 3, 4, 5, 6, 7, 8, 9, 11, 22, 33, 44, 55, 66, 77, 88, 99, 101, 111, 121, 131, 141, 151, 161, 171, 181, 191, 202, 212, 222, 232, 242, 252, 262, 272, 282, 292]

##table and sumof the multiples
def table(n):
    s=0
    for i in range(1,11):
        print(n*i,end=" ")
        s=s+n*i
    print()
    print("sum of the multiples of",n," : ",end=" ")
    return s
print(table(5))
print(table(6))
print(table(12))

output
5 10 15 20 25 30 35 40 45 50 
sum of the multiples of 5  :  275
6 12 18 24 30 36 42 48 54 60 
sum of the multiples of 6  :  330
12 24 36 48 60 72 84 96 108 120 
sum of the multiples of 12  :  660

#sum of second largest value in even and odd arrays
n=int(input())
l=[]
for i in range(n):
    a=int(input())
    l.append(a)
e=[]
o=[]
for i in range(len(l)):
    if i%2==0:
        e.append(l[i])
    else:
        o.append(l[i])
e=sorted(e)
o=sorted(o)
if len(o)>=2 and len(e)>=2:
    print("sum of second largest sum of even and odd arrays : ",e[-2]+o[-2])
else:
    print("-1")

output
5
3
4
1
7
9
sum of second largest sum of even and odd arrays :  7

3
1
4
2
-1  -- len of odd array size is 1 

##div by 3 and 5 sum
def div(n,m):
    s=0
    l=[]
    for i in range(n,m+1):
        if i%3==0 and i%5==0:
            s=s+i
            l.append(i)
    return s
print(div(12,50))
print(div(100,160))

output
90
510



def choice(c,a,b):
    if c==1:
        return a+b
    elif c==2:
        return a-b
    elif c==3:
        return a*b
    elif c==4:
        return a//b
print(choice(1,10,20))
print(choice(2,10,20))
print(choice(3,10,20))
print(choice(4,10,20))
print(choice(4,20,10))              
            
output
30
-10
200
0
2

##replace the characters in the string
def replace(s,ch1,ch2):
    s1=""
    if ch1 not in s and ch2 not in s or ch1==ch2:
        return s
    if s=="":
        return ""
    for i in range(len(s)):
        if s[i]==ch1:
            s1=s1+ch2
        elif s[i]==ch2:
            s1=s1+ch1
        else:
            s1=s1+s[i]
    return s1
print(replace("apples","a","p"))
print(replace("apples","a","b"))
print(replace("apples","x","y"))

output
paales
bpples
apples

##maxexpo of 2
def maxexpo(n,m):
    max_ele=n
    k=0
    for i in range(n,m+1):
        x=i
        c=0
        while(x%2==0):
            x=x//2
            c+=1
        if c==k:
            k=c
            max_ele=min(max_ele,i)
        elif c>k:
            k=c
            max_ele=i
    return [max_ele,"count : ",k]
print(maxexpo(7,12))
print(maxexpo(10,20))
print(maxexpo(11,15))
print(maxexpo(8,8))
print(maxexpo(5,6))
print(maxexpo(5,5))
print(maxexpo(256, 1792))

output
[8, 'count : ', 3]
[16, 'count : ', 4]
[12, 'count : ', 2]
[8, 'count : ', 3]
[6, 'count : ', 1]
[5, 'count : ', 0]
[1024, 'count : ', 10]


##carry count
def carry(n1,n2):
    count=0
    k=0
    while n1>0 or n2>0:
        r1=n1%10
        r2=n2%10
        if r1+r2+k>=10:
            k=1
            count+=1
        else:
            k=0
        n1=n1//10
        n2=n2/10
    return count
print(carry(451,349))
print(carry(23,983))
print(carry(23,563))

output
2
2
0

#convert the base to given n
def convertbase(n,num):
    r=""
    if num==0:
        return "0"
    elif n>36 or n<2:
        return -1
    else:
        s="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        while num>0:
            rem=num%n
            r=s[rem]+r
            num=num//n
        return r
print(convertbase(12,718))
print(convertbase(21,5678))

output
4BA
CI8







 





