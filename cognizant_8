n=int(input())
for i in range(1,n+1):
  for j in range(i):
    print('*',end=" ")
  print()



n=int(input())
for i in range(1,n+1):
    print('* '*i)

output
6

STDIN
Output:

* 
* * 
* * * 
* * * * 
* * * * * 
* * * * * *

n=int(input())
for i in range(1,n+1):
  for j in range(n-i):
    print("",end=" ")
  for k in range(i):
    print(k+1,end="")
    if k!=i-1:
      print('*',end="")
  print()

output
n=4
   1
  1*2
 1*2*3
1*2*3*4

n=int(input())
for i in range(1,n+1):
  for j in range(i):
    print(j+1,end="")
    if j!=i-1:
      print('*',end="")
  print()

output
1
1*2
1*2*3
1*2*3*4

##buzz
n=int(input())
if n%7==0 or int(str(n)[-1])==7:
  print("Buzz")
else:
  print("Not an Buzz")

##subsequence   checking whether s2 is an subsequence of s1
def subseq():
  s1=input()
  s2=input()
  j=0
  i=0
  m=len(s2)
  n=len(s1)
  if s2=="":
    return True
  while i<n and j<m:
    if s1[i]==s2[j]:
      j+=1
    i+=1
  if j==m:
    return True
  return False
print(subseq())

output
hyderabad
hdad

STDIN
Output:

True

hyderabad
dean

STDIN
Output:

False

##sum of first half of the array less than right sum then reverse the array else leave it as it is 
n=int(input())
arr=list(map(int,input().split()))
if sum(arr[:n//2])<sum(arr[n//2:]):
  arr=arr[::-1]
print(arr)

output
5
10 20 1 2 3
STDIN
Output:

[10, 20, 1, 2, 3]

##abs(partition diff of left and right) is even then increment count and print

arr=list(map(int,input().split()))
k=0
t=sum(arr)
for i in range(1,len(arr)):
  l=sum(arr[:i])
  r=t-l
  if abs(l-r)%2==0:
    k+=1
print(k)

output
10 10 3 7 6
STDIN
Output:

4


##mcq
def add(a,b):
  return a+b

def subtract(a,b):
  return a-b
  
def multiply(a,b):
  return a*b

def operation(fun,a,b):
  return fun(a,b)

print( operation(add, 20,10))
print( operation(subtract, 20,10))
print( operation(multiply, 20,10))

Output:

30
10
200

##Happy number
#Happy number
n=int(input())
while(len(str(n))>1):
  n=sum([int(i)**2 for i in str(n)])
if n==1 or n==7:
  print("Happy number")
else:
  print("Not an Happy number")
    
output
2
STDIN
Output:

Not an Happy number


n=7,10,13,19,23
happy number

from abc import ABC, abstractmethod
# a subclass inherited from ABC class is abstract class
class Principal (ABC) :
  @abstractmethod     # decorator 
  def teach(self) :
    pass
  
  @classmethod
  def evaluation(self, m1, m2, m3):
    m = [m1, m2, m3]
    m = sorted(m, reverse = True)
    return (m[0] + m[1])/2
    
  
class Professor(Principal):
  def teach(self):
    print("get syllabus \n download PPTs  \n put your name")
    print("read in the class")
  
  
  def research(self):
    print("collect scientific journals")
    print("identify the problem")
    print("solve it with new algorithm")
  

p = Professor()
p.research()
print()
p.teach()
print(p.evaluation(12,15,14))
print( Professor.evaluation(12, 15, 14))
  
output
Output:

collect scientific journals
identify the problem
solve it with new algorithm

get syllabus 
 download PPTs  
 put your name
read in the class
14.5
14.5


s1=input()
s2=""

for i in range(len(s1)):
  s2=s2+s1[i]*(s1.index(s1[i])+1)+"-"
s3=s2[:len(s2)-1]
print(s3)

output
abcab
STDIN
Output:

a-bb-ccc-a-bb

##unique values 
s1=input()
s2=""

for i in range(len(s1)):
  if s1[i] not in s2:
    s2=s2+s1[i]*(s1.index(s1[i])+1)+"-"
s3=s2[:len(s2)-1]
print(s3)

output
a-bb-ccc


_a,__a__,__a,_   are allowed as an identifier
special characters,are not allowed to place in the starting of the variable and spaces not allowed in between 
variable name starting with _ is treated as private variable
3*1**3=3
3*1**3**2=3
odd ~n=-(n+1)
even ~~n=n
~4=-5
~~4=4

apple=mango
value error














