
-- create
CREATE TABLE company (
  companyId int, 
  userId int, 
  language text
);

insert into company values(1, 1, "telugu");
insert into company values(1, 2, "telugu");
insert into company values(1, 1, "hindi");
insert into company values(2, 3, "telugu");
insert into company values(2, 4, "marathi");
insert into company values(2, 3, "english");
insert into company values(3, 5, "telugu");
select * from company;


select userId,count(distinct language) as lang from company group by userId 
having lang>1;

output
+-----------+--------+----------+
| companyId | userId | language |
+-----------+--------+----------+
|         1 |      1 | telugu   |
|         1 |      2 | telugu   |
|         1 |      1 | hindi    |
|         2 |      3 | telugu   |
|         2 |      4 | marathi  |
|         2 |      3 | english  |
|         3 |      5 | telugu   |
+-----------+--------+----------+
+--------+------+
| userId | lang |
+--------+------+
|      1 |    2 |
|      3 |    2 |
+--------+------+


-- create
create table student (
  studentId text,
  studentName text,
  addr text,
  city text
);

insert into student values("s101", "aruna", "hitec city", "hyderabad");
insert into student values("s201", "amala", "indira nagar", "bangalore");
insert into student values("s301", "karuna", "adayar", "chennai");
insert into student values("s401", "kamala", "andheri", "mumbai");


create table mark (
value int, 
studentId text, 
subjectId text
);

insert into mark values(55, "s101", "cse001");
insert into mark values(65, "s201", "cse001");
insert into mark values(50, "s101", "cse002");
insert into mark values(58, "s301", "cse002");



create table subject(
subjectId text, 
subjectName text, 
profId text
);

insert into subject values("cse001", "data structures", "p01");
insert into subject values("cse002", "database design", "p02");



select st.studentName as student,sb.subjectName as subjectName,m.value as marks
from mark m join subject sb on sb.subjectId=m.subjectId join student st on

m.studentId=st.studentId;

output
+---------+-----------------+-------+
| student | subjectName     | marks |
+---------+-----------------+-------+
| aruna   | database design |    50 |
| aruna   | data structures |    55 |
| amala   | data structures |    65 |
| karuna  | database design |    58 |
+---------+-----------------+-------+

##intersection of two array elements
n1=int(input())
arr1=list(map(int,input().split()))[:n1]
n2=int(input())
arr2=list(map(int,input().split()))[:n2]
arr1=set(arr1)
arr2=set(arr2)
arr3=list(arr1.intersection(arr2))
print(arr3)

output
5
1 2 3 4 5
4
2 5 6 9
[2, 5]
-----
n=int(input())
l=list(map(int,input().split()))
k=int(input())
s=sum(l)
l2=[]
for i in range(len(l)):
    if s-l[i]>k:
        l2.append(k)
    else:
        l2.append(s-l[i])
print(l2)

output
4
1 2 3 4
10
[9, 8, 7, 6]

3
1 6 4
8
[8, 5, 7]

##bill generation
p=int(input())
puff=int(input())
cd=int(input())
print(p*100+puff*20+cd*10)

output
10
12
5
STDIN
Output:

1290

##prime or not
import math
def isPrime(n):
  if n==2:
    return True
  elif n<2 or n%2==0:
    return False
  else:
    for i in range(3,int(math.sqrt(n))+1):
      if n%i==0:
        return False
    return True
print(isPrime(5))
print(isPrime(7))
print(isPrime(10))
print(isPrime(0))
print(isPrime(1))

output
True
True
False
False
False

##prime number range from 1 to 50
import math
def isPrime(n):
  if n==2:
    return True
  elif n<2 or n%2==0:
    return False
  else:
    for i in range(3,int(math.sqrt(n))+1):
      if n%i==0:
        return False
    return True
n=int(input())
m=int(input())
l=[]
for i in range(n,m+1):
  if (isPrime(i)):
    l.append(i)
print(l)

output
1
50

STDIN
Output:

[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]

ascii -- character 
n=int(input())
arr=list(map(int,input().split()))[:n]
for i in range(len(arr)):
    print(arr[i],chr(arr[i]))

output
4
65 66 67 68
65 A
66 B
67 C
68 D

115 s
116 t
101 e
112 p

##highest placement
arr1=['cse','ece','mec']
arr=list(map(int,input().split()))
m=max(arr)
s=sorted(arr)
k=0
t=0
for i in range(len(s)-1):
    if s[0]<0:
        print("Data is invalid")
        t=1
        break
    elif s[i]==s[i+1]:
        k+=1
if t==0:
    if k==len(arr)-1:
        print("None")
    else:
        print("Highest Placement recieved departments")
        for i in range(len(arr)):
            if(arr[i]==m):
                print(arr1[i])

output
75 90 20
Highest Placement recieved departments
ece

##months  --  seasons
n=int(input())
if n in [3,4,5]:
    print("Spring")
elif n in [6,7,8]:
    print("Summer")
elif n in [9,10,11]:
    print("Autumn")
elif n in [12,1,2]:
    print("Winter")
else:
    print("Invalid")

output
5
Spring

#factors
n=abs(int(input()))
if n==0:
    print("No Factors")
else:
    for i in range(1,n+1):
        if n%i==0:
            print(i,end=" ")

output
54
1 2 3 6 9 18 27 54 

#minimum discount things to be printed 
n=int(input())
l=[]
for i in range(n):
    l1=input().split(",")
    l.append(l1)
m=float('inf')
r=[]
for i in range(len(l)):
    r.append((int(l[i][1])*int(l[i][2]))/100)
    if m>=(int(l[i][1])*int(l[i][2]))/100:
        m=(int(l[i][1])*int(l[i][2]))/100
for i in range(len(r)):
  if r[i]==m:
    print(l[i][0])

output
4
Mobile,5000,10
shoe,5000,10
WATCH,5000,10
Laptop,5000,10
STDIN
Output:

Mobile
shoe
WATCH
Laptop

4
mobile,10000,20
shoe,5000,10
watch,6000,15
laptop,35000,5
STDIN
Output:

shoe

##checking whether s is present in arr or not
n=int(input())
if n<=0:
  print("Invalid Range")
else:
  arr=input().split(" ")
  s=input()
  if s in arr:
    print(s,"is available")
  else:
    print(s,"is not available")




















