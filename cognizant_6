
-- create
CREATE TABLE company (
  companyId int, 
  userId int, 
  language text
);

insert into company values(1, 1, "telugu");
insert into company values(1, 2, "telugu");
insert into company values(1, 1, "hindi");
insert into company values(2, 3, "telugu");
insert into company values(2, 4, "marathi");
insert into company values(2, 3, "english");
insert into company values(3, 5, "telugu");
select * from company;


select userId,count(distinct language) as lang from company group by userId 
having lang>1;

output
+-----------+--------+----------+
| companyId | userId | language |
+-----------+--------+----------+
|         1 |      1 | telugu   |
|         1 |      2 | telugu   |
|         1 |      1 | hindi    |
|         2 |      3 | telugu   |
|         2 |      4 | marathi  |
|         2 |      3 | english  |
|         3 |      5 | telugu   |
+-----------+--------+----------+
+--------+------+
| userId | lang |
+--------+------+
|      1 |    2 |
|      3 |    2 |
+--------+------+


-- create
create table student (
  studentId text,
  studentName text,
  addr text,
  city text
);

insert into student values("s101", "aruna", "hitec city", "hyderabad");
insert into student values("s201", "amala", "indira nagar", "bangalore");
insert into student values("s301", "karuna", "adayar", "chennai");
insert into student values("s401", "kamala", "andheri", "mumbai");


create table mark (
value int, 
studentId text, 
subjectId text
);

insert into mark values(55, "s101", "cse001");
insert into mark values(65, "s201", "cse001");
insert into mark values(50, "s101", "cse002");
insert into mark values(58, "s301", "cse002");



create table subject(
subjectId text, 
subjectName text, 
profId text
);

insert into subject values("cse001", "data structures", "p01");
insert into subject values("cse002", "database design", "p02");



select st.studentName as student,sb.subjectName as subjectName,m.value as marks
from mark m join subject sb on sb.subjectId=m.subjectId join student st on

m.studentId=st.studentId;

output
+---------+-----------------+-------+
| student | subjectName     | marks |
+---------+-----------------+-------+
| aruna   | database design |    50 |
| aruna   | data structures |    55 |
| amala   | data structures |    65 |
| karuna  | database design |    58 |
+---------+-----------------+-------+

##intersection of two array elements
n1=int(input())
arr1=list(map(int,input().split()))[:n1]
n2=int(input())
arr2=list(map(int,input().split()))[:n2]
arr1=set(arr1)
arr2=set(arr2)
arr3=list(arr1.intersection(arr2))
print(arr3)

output
5
1 2 3 4 5
4
2 5 6 9
[2, 5]
-----
n=int(input())
l=list(map(int,input().split()))
k=int(input())
s=sum(l)
l2=[]
for i in range(len(l)):
    if s-l[i]>k:
        l2.append(k)
    else:
        l2.append(s-l[i])
print(l2)

output
4
1 2 3 4
10
[9, 8, 7, 6]

3
1 6 4
8
[8, 5, 7]

##bill generation
p=int(input())
puff=int(input())
cd=int(input())
print(p*100+puff*20+cd*10)

output
10
12
5
STDIN
Output:

1290

##prime or not
import math
def isPrime(n):
  if n==2:
    return True
  elif n<2 or n%2==0:
    return False
  else:
    for i in range(3,int(math.sqrt(n))+1):
      if n%i==0:
        return False
    return True
print(isPrime(5))
print(isPrime(7))
print(isPrime(10))
print(isPrime(0))
print(isPrime(1))

output
True
True
False
False
False

##prime number range from 1 to 50
import math
def isPrime(n):
  if n==2:
    return True
  elif n<2 or n%2==0:
    return False
  else:
    for i in range(3,int(math.sqrt(n))+1):
      if n%i==0:
        return False
    return True
n=int(input())
m=int(input())
l=[]
for i in range(n,m+1):
  if (isPrime(i)):
    l.append(i)
print(l)

output
1
50

STDIN
Output:

[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]















